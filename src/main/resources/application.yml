spring:
  application:
    name: microservice-discovery-eureka-ha
---
spring:
  # 指定profile=peer1
  profiles: peer1
  security:
    user:
      name: eureka
      password: 123456
server:
  port: 8761
eureka:
  instance:
    #指定当profile=peer1时，主机名是peer1
    hostname: peer1
  client:
    #应用程序将自己的健康状态传播到Eureka Server
    healthcheck:
      enabled: true
    #是否将自己注册到Eureka Server，默认为true。由于当前应用就是Eureka Server，故而设为 false
    register-with-eureka: true
    #是否从Eureka Server获取注册信息，默认为true，因为这是一个单点的Eureka Server，
    #不需要同步其他的Eureka Server节点的数据，故而设置为false
    fetch-registry: true
    #设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka;多个地址可使用，分隔
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@peer2:8762/eureka/
#      defaultZone: http://peer2:8762/eureka/
---
spring:
  # 指定profile=peer2
  profiles: peer2
  security:
      user:
        name: eureka
        password: 123456
server:
  port: 8762
eureka:
  instance:
    #指定当profile=peer1时，主机名是peer1
    hostname: peer2
  client:
    #应用程序将自己的健康状态传播到Eureka Server
    healthcheck:
        enabled: true
    #是否将自己注册到Eureka Server，默认为true。由于当前应用就是Eureka Server，故而设为 false
    register-with-eureka: true
    #是否从Eureka Server获取注册信息，默认为true，因为这是一个单点的Eureka Server，
    #不需要同步其他的Eureka Server节点的数据，故而设置为false
    fetch-registry: true
    #设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka;多个地址可使用，分隔
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@peer1:8761/eureka
#      defaultZone: http://peer1:8761/eureka/